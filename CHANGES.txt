*********************************
Ver 0.4.0 CHANGES ***************
*********************************
 
*** CHANGES TO EXISTING FUNCTIONS

addVar(int,float *,float,float,float)
now MENWIZ supports variables of floating point type (MW_AUTO_FLOAT). The variables are displayed with a nember of decimal digits set by MW_FLOAT_DEC global variable (default=1). The syntax is the same as integer type (MW_AUTO_INTEGER).
Example:
float gp;
menu.addVar(MW_AUTO_FLOAT,&gp,11.00,100.00,0.5);
the above call create a variable of type float, binded to sketch variable gp, ranging between 11,0 and 100,0, with increment of 0,5

addVar(int,byte *,byte,byte,byte)
now MENWIZ supports now also variables of byte type (MW_AUTO_BYTE). The syntax is the same as integer type (MW_AUTO_INTEGER).
Example:
byte gp;
menu.addVar(MW_AUTO_BYTE,&gp,0,255,1);
the above call create a variable of type byte, binded to sketch variable gp, ranging between 1,0 and 255, with increment of 1

*** NEW FUNCTIONS ***************

*** BUG FIXED *******************

*** INTERNAL CHANGES ************

added the global variable MW_FLOAT_DEC

*********************************
Ver 0.3.0 CHANGES *************** 
*********************************

*** CHANGES TO EXISTING FUNCTIONS

addSplash
the string passed to the function use \n (0x0A) character as line delimiter instead of '#'
  

*** NEW FUNCTIONS ***************

addUsrNav (WARNING: NOT FULLY TESTED YET)
user defined navigation device routine (callback). The user can use any device other than buttons to overwrite the internal routine. The callback *must* return an int code for any pushed "button" (MW_BTU=UP,MW_BTD=DOWN,MW_BTL=LEFT,MW_BTR=RIGHT,MW_BTE=ESCAPE,MW_BTC=CONFIRM,MW_BTNULL=NO BUTTON). 
The callback is invocated on each call to the method draw. The used device(s) must be declared and initialized inside the sketch by the user. The callback is in charge of  device debouncing (if any).

drawUsrScreen
added public method to class menwiz. It quick draw LCD screen with the contents of the argument string. Each line to be shown in the LCD is terminated by char 0x0A ('\n') inside the argument string. This method provide the user with the quick way to write an entire LCD screen (the lib will manage space padding, cursor position and string length checking) 
Example: 
menu.drawUsrScreen("Test user screen\nline1\nline2\n\n"); 

getErrorMessage
added a boolean argument: if true, the function write a full error message to the default serial terminal, otherwise return error code only 

*** BUG FIXED *******************


*** INTERNAL CHANGES ************

- abstracted the methods for button checking, in order to add aaUsrNav functions
- reinforced error checkin drawUsrScreen (string truncation)
- renaming internal variables

